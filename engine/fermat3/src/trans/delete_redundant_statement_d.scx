(set! //t/r_/delete_/redundant_/statement
  (@new_tr_number))

(vector-set!
  //t/rs_/name
  (- //t/r_/delete_/redundant_/statement 1)
  "Delete Redundant Statement")

(vector-set!
  //t/rs_/proc_/name
  (- //t/r_/delete_/redundant_/statement 1)
  "Delete_Redundant_Statement")

(vector-set!
  //t/rs_/test
  (- //t/r_/delete_/redundant_/statement 1)
  @delete_redundant_statement_test)

(vector-set!
  //t/rs_/code
  (- //t/r_/delete_/redundant_/statement 1)
  @delete_redundant_statement_code)

(vector-set!
  //t/rs_/keywords
  (- //t/r_/delete_/redundant_/statement 1)
  (list "Delete"))

(vector-set!
  //t/rs_/help
  (- //t/r_/delete_/redundant_/statement 1)
  "Delete Redundant Statement checks whether
the current statement is `Redundant' (because it calls nothing external and the variables
it modifies will all be assigned again before their values are accessed). If so,
it deletes the Statement. ")

(vector-set!
  //t/rs_/prompt
  (- //t/r_/delete_/redundant_/statement 1)
  "")

(vector-set!
  //t/rs_/data_/gen_/type
  (- //t/r_/delete_/redundant_/statement 1)
  "")

