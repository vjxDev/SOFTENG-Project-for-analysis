(define (@move_comments_test)
  (cond ((not (= (@spec_type (@item)) //t_/a_/s))
         (@fail "Not Action System"))
        (#t (@pass))))

(define (@move_comments_code //data)
  (let ((//a/s_/size (@size (list-ref (@item) (+ 1 2)))))
    (@down_last)
    (@down)
    (let ((var-save //i)
          (for-step 1)
          (for-end //a/s_/size))
      (set! //i 1)
      (let for-loop ()
        (cond ((or (and (> 1 0) (<= //i for-end))
                   (and (< 1 0) (>= //i for-end)))
               (let ((//actn (@posn)))
                 (@down_last)
                 (@down_last)
                 (let while-loop ()
                   (cond ((and (@left?)
                               (not (= (@spec_type (@item)) //t_/call)))
                          (@left)
                          (while-loop))
                         (#t #t)))
                 (let ((//s '()))
                   (let while-loop ()
                     (cond ((and (= (@spec_type (@item)) //t_/call)
                                 (@right?)
                                 (member
                                   (@spec_type
                                     (list-ref (@parent) (+ 1 (+ (@posn_n) 1))))
                                   (list //t_/skip //t_/comment)))
                            (begin
                              (@cut)
                              (set! //s (@buffer))
                              (@paste_after //s)
                              (@right))
                            (while-loop))
                           (#t #t))))
                 (@goto //actn)
                 (cond ((@right?) (@right))))
               (set! //i (+ //i for-step))
               (for-loop))
              (#t #t)))
      (set! //i var-save))))

